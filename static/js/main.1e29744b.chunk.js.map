{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Container/Container.module.css","components/TransactionHistory/TransactionHistory.module.css","logo.svg","components/Container/Container.js","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","s","container","Profile","avatar","name","tag","location","stats","profile","description","src","alt","label","quantity","followers","views","likes","getRandomColor","letters","split","color","i","Math","floor","random","length","Statistics","statsData","title","statistics","statList","map","item","style","backgroundColor","percentage","id","FriendList","friends","isOnline","online","offline","width","TransactionHistory","transactions","transactionHistory","type","amount","currency","App","userData","statisticalData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,MAAQ,uBAAuB,SAAW,4B,gBCAvSD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,yBAAyB,MAAQ,4B,gBCAhLD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,yBAAyB,OAAS,2BAA2B,OAAS,oDAAoD,QAAU,qDAAqD,OAAS,2BAA2B,KAAO,2B,+PCAvSD,EAAOC,QAAU,CAAC,UAAY,+B,m4BCA9BD,EAAOC,QAAU,CAAC,mBAAqB,iD,ymECDxB,I,qBCMAC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBC6CxBI,EA7CC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC9C,OACE,sBAAKR,UAAU,gBAAf,UACE,qBAAIA,UAAU,YAAd,+DACY,mLAEZ,sBAAKA,UAAWC,IAAEQ,QAAlB,UACE,sBAAKT,UAAWC,IAAES,YAAlB,UACE,qBAAKC,IAAKP,EAAQQ,IAAKP,EAAO,UAAWL,UAAWC,IAAEG,SACtD,mBAAGJ,UAAWC,IAAEI,KAAhB,SAAuBA,IACvB,mBAAGL,UAAWC,IAAEK,IAAhB,SAAsB,IAAMA,IAC5B,oBAAGN,UAAWC,IAAEM,SAAhB,cAA4BA,EAA5B,UAGF,qBAAIP,UAAWC,IAAEO,MAAjB,UACE,+BACE,sBAAMR,UAAWC,IAAEY,MAAnB,uBACA,uBAAMb,UAAWC,IAAEa,SAAnB,cAA+BN,EAAMO,UAArC,UAEF,+BACE,sBAAMf,UAAWC,IAAEY,MAAnB,mBACA,uBAAMb,UAAWC,IAAEa,SAAnB,UAA8BN,EAAMQ,MAApC,UAEF,+BACE,sBAAMhB,UAAWC,IAAEY,MAAnB,mBACA,uBAAMb,UAAWC,IAAEa,SAAnB,cAA+BN,EAAMS,MAArC,oB,uBCMZ,SAASC,IAGP,IAFA,IAAIC,EAAU,aAAaC,MAAM,IAC7BC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAASF,EAAQI,KAAKC,MAAMD,KAAKE,SAAWN,EAAQO,SAEtD,OAAOL,EAGMM,MAxCI,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAC/B,OACE,sBAAK7B,UAAU,gBAAf,UACE,qBAAIA,UAAU,YAAd,+DACY,wIAGZ,0BAASA,UAAWC,IAAE6B,WAAtB,UACGD,GAAS,oBAAI7B,UAAWC,IAAE4B,MAAjB,SAAyBA,IAEnC,oBAAI7B,UAAWC,IAAE8B,SAAjB,SACGH,EAAUI,KAAI,SAACC,GAAD,OACb,qBACEjC,UAAWC,IAAEgC,KAEbC,MAAO,CAAEC,gBAAiBjB,KAH5B,UAKE,uBAAMlB,UAAWC,IAAEY,MAAnB,UAA2BoB,EAAKpB,MAAhC,OACA,uBAAMb,UAAWC,IAAEmC,WAAnB,UAAgCH,EAAKG,WAAa,IAAlD,SAJKH,EAAKI,gB,uBCeTC,EA9BI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,sBAAKvC,UAAU,gBAAf,UACE,qBAAIA,UAAU,YAAd,+DACY,gHAGZ,oBAAIA,UAAWC,IAAEC,UAAjB,SACGqC,EAAQP,KAAI,SAACC,GAAD,OACX,qBAAIjC,UAAWC,IAAEgC,KAAjB,UACGA,EAAKO,SACJ,sBAAMxC,UAAWC,IAAEwC,SAEnB,sBAAMzC,UAAWC,IAAEyC,UAGrB,qBACE1C,UAAWC,IAAEG,OACbO,IAAKsB,EAAK7B,OACVQ,IAAKqB,EAAK5B,KAAO,UACjBsC,MAAM,OAER,oBAAG3C,UAAWC,IAAEI,KAAhB,UAAuB4B,EAAK5B,KAA5B,SAb0B4B,EAAKI,a,yBCqB5BO,EA9BY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC5B,OACE,sBAAK7C,UAAU,gBAAf,UACE,qBAAIA,UAAU,YAAd,+DACY,8IAGZ,wBAAOA,UAAWC,IAAE6C,mBAApB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGD,EAAab,KAAI,SAACC,GAAD,OAChB,+BACE,+BAAKA,EAAKc,KAAV,OACA,+BAAKd,EAAKe,OAAV,OACA,+BAAKf,EAAKgB,SAAV,SAHOhB,EAAKI,gB,QCkBXa,MArBf,WACE,OAEE,eAAC,EAAD,WACE,cAAC,EAAD,CACE9C,OAAQ+C,EAAS/C,OACjBC,KAAM8C,EAAS9C,KACfC,IAAK6C,EAAS7C,IACdC,SAAU4C,EAAS5C,SACnBC,MAAO2C,EAAS3C,QAGlB,cAAC,EAAD,CAAYoB,UAAWwB,EAAiBvB,MAAM,iBAE9C,cAAC,EAAD,CAAYU,QAASA,IAErB,cAAC,EAAD,CAAoBM,aAAcA,QCrBzBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1e29744b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1fD8C\",\"description\":\"Profile_description__3Y75G\",\"avatar\":\"Profile_avatar__17Yvg\",\"name\":\"Profile_name__2c7Nv\",\"tag\":\"Profile_tag__IgvVj\",\"location\":\"Profile_location__JljQf\",\"stats\":\"Profile_stats__3juav\",\"label\":\"Profile_label__26ZD-\",\"quantity\":\"Profile_quantity__2mLvJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1iYxj\",\"title\":\"Statistics_title__16y7P\",\"statList\":\"Statistics_statList__248wf\",\"item\":\"Statistics_item__2vCvs\",\"label\":\"Statistics_label__3miCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendList_container__39nmC\",\"item\":\"FriendList_item__3Cry-\",\"status\":\"FriendList_status__r0f0k\",\"online\":\"FriendList_online__1ZjGA FriendList_status__r0f0k\",\"offline\":\"FriendList_offline__2YAkq FriendList_status__r0f0k\",\"avatar\":\"FriendList_avatar__wUrD5\",\"name\":\"FriendList_name__1mysI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Aw4Aw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2wMJZ\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => {\r\n  return (\r\n    <div className=\"taskContainer\">\r\n      <h2 className=\"taskTitle\">\r\n        Завдання 1<span>Профіль соціальної мережі</span>\r\n      </h2>\r\n      <div className={s.profile}>\r\n        <div className={s.description}>\r\n          <img src={avatar} alt={name + \" avatar\"} className={s.avatar} />\r\n          <p className={s.name}>{name}</p>\r\n          <p className={s.tag}>{\"@\" + tag}</p>\r\n          <p className={s.location}> {location} </p>\r\n        </div>\r\n\r\n        <ul className={s.stats}>\r\n          <li>\r\n            <span className={s.label}>Followers</span>\r\n            <span className={s.quantity}> {stats.followers} </span>\r\n          </li>\r\n          <li>\r\n            <span className={s.label}>Views</span>\r\n            <span className={s.quantity}>{stats.views} </span>\r\n          </li>\r\n          <li>\r\n            <span className={s.label}>Likes</span>\r\n            <span className={s.quantity}> {stats.likes} </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ statsData, title }) => {\r\n  return (\r\n    <div className=\"taskContainer\">\r\n      <h2 className=\"taskTitle\">\r\n        Завдання 2<span>Секція статистики</span>\r\n      </h2>\r\n\r\n      <section className={s.statistics}>\r\n        {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n        <ul className={s.statList}>\r\n          {statsData.map((item) => (\r\n            <li\r\n              className={s.item}\r\n              key={item.id}\r\n              style={{ backgroundColor: getRandomColor() }}\r\n            >\r\n              <span className={s.label}>{item.label} </span>\r\n              <span className={s.percentage}>{item.percentage + \"%\"} </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nfunction getRandomColor() {\r\n  var letters = \"0123456789\".split(\"\");\r\n  var color = \"#\";\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * letters.length)];\r\n  }\r\n  return color;\r\n}\r\n\r\nexport default Statistics;\r\n","import s from \"./FriendList.module.css\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <div className=\"taskContainer\">\r\n      <h2 className=\"taskTitle\">\r\n        Завдання 3<span>Список друзів</span>\r\n      </h2>\r\n\r\n      <ul className={s.container}>\r\n        {friends.map((item) => (\r\n          <li className={s.item} key={item.id}>\r\n            {item.isOnline ? (\r\n              <span className={s.online}></span>\r\n            ) : (\r\n              <span className={s.offline}></span>\r\n            )}\r\n\r\n            <img\r\n              className={s.avatar}\r\n              src={item.avatar}\r\n              alt={item.name + \" avatar\"}\r\n              width=\"48\"\r\n            />\r\n            <p className={s.name}>{item.name} </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendList;\r\n","import s from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ transactions }) => {\r\n  return (\r\n    <div className=\"taskContainer\">\r\n      <h2 className=\"taskTitle\">\r\n        Завдання 4<span>Історія транзакцій</span>\r\n      </h2>\r\n\r\n      <table className={s.transactionHistory}>\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Currency</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {transactions.map((item) => (\r\n            <tr key={item.id}>\r\n              <td>{item.type} </td>\r\n              <td>{item.amount} </td>\r\n              <td>{item.currency} </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import logo from './logo.svg';\nimport './App.css';\n\nimport Container from \"./components/Container/Container\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport userData from \"./user.json\";\n\nimport Statistics from \"./components/Statistics/Statistics\";\nimport statisticalData from \"./statistical-data.json\";\n\nimport FriendList from \"./components/FriendList/FriendList\";\nimport friends from \"./friends.json\";\n\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\nimport transactions from \"./transactions.json\";\n\nfunction App() {\n  return (\n\n    <Container>\n      <Profile\n        avatar={userData.avatar}\n        name={userData.name}\n        tag={userData.tag}\n        location={userData.location}\n        stats={userData.stats}\n      />\n\n      <Statistics statsData={statisticalData} title=\"Upload stats\" />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory transactions={transactions} />\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}